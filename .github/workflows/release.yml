name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        default: "v1.0.0"
      create_tag:
        description: "Create git tag"
        required: false
        default: true
        type: boolean

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    outputs:
      binary-name: ${{ steps.rename.outputs.binary-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build binary for AMD64
        run: |
          # Ensure we're building for AMD64
          export ARCH=amd64
          python build.py

      - name: Rename binary
        id: rename
        run: |
          cd dist
          mv smart-rds-viewer smart-rds-viewer-linux-amd64
          echo "binary-name=smart-rds-viewer-linux-amd64" >> $GITHUB_OUTPUT

      - name: Upload AMD64 binary
        uses: actions/upload-artifact@v4
        with:
          name: smart-rds-viewer-linux-amd64
          path: dist/smart-rds-viewer-linux-amd64

  build-arm64:
    runs-on: ubuntu-24.04-arm
    outputs:
      binary-name: ${{ steps.rename.outputs.binary-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build binary for ARM64
        run: |
          # Native ARM64 build - no emulation needed!
          export ARCH=arm64
          python build.py

      - name: Rename binary
        id: rename
        run: |
          cd dist
          mv smart-rds-viewer smart-rds-viewer-linux-arm64
          echo "binary-name=smart-rds-viewer-linux-arm64" >> $GITHUB_OUTPUT

      - name: Upload ARM64 binary
        uses: actions/upload-artifact@v4
        with:
          name: smart-rds-viewer-linux-arm64
          path: dist/smart-rds-viewer-linux-arm64

  create-release:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create tag
        if: ${{ inputs.create_tag }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ inputs.version }} -m "Release ${{ inputs.version }}"
          git push origin ${{ inputs.version }}

      - name: Download binaries
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          name: Release ${{ inputs.version }}
          files: |
            smart-rds-viewer-linux-amd64
            smart-rds-viewer-linux-arm64
          body: |
            ## Smart RDS Viewer ${{ inputs.version }}

            ### Downloads
            - **Linux AMD64**: `smart-rds-viewer-linux-amd64`
            - **Linux ARM64**: `smart-rds-viewer-linux-arm64`

            ### Usage
            ```bash
            # Make executable
            chmod +x smart-rds-viewer-linux-amd64

            # Run
            ./smart-rds-viewer-linux-amd64
            ```

            ### Requirements
            - AWS credentials configured
            - RDS, CloudWatch, and Pricing API permissions
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
